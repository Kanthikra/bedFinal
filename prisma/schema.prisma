generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
  relationMode = "prisma"
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String
  name        String
  email       String   
  phoneNumber String
  profilePicture String
  bookings    Booking[]
  reviews     Review[]

  @@index([email])
  @@index([username])
}

model Host {
  id          String   @id @default(uuid())
  username    String   @unique
  password    String
  name        String
  email       String   
  phoneNumber String
  profilePicture String
  aboutMe     String
  properties  Property[]

  @@index([email])
  @@index([username])
}

model Property {
  id            String    @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Float
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  hostId        String
  host          Host      @relation(fields: [hostId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  amenities     Amenity[] @relation("PropertyAmenities")
  bookings      Booking[]
  reviews       Review[]
  rating        Float

  @@index([hostId])
}

model Amenity {
  id          String    @id @default(uuid())
  name        String
  properties  Property[] @relation("PropertyAmenities")
}

model Booking {
  id             String   @id @default(uuid())
  userId         String
  propertyId     String
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Float
  bookingStatus  String
  user           User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  property       Property @relation(fields: [propertyId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}

model Review {
  id          String   @id @default(uuid())
  userId      String
  propertyId  String
  rating      Int
  comment     String
  user        User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  property    Property @relation(fields: [propertyId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@index([userId])
  @@index([propertyId])
}
